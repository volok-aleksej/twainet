exports.Module = function(name, connector) {
	this.name = name;
	this.connector = connector;
	this.connMap = {};
}

exports.Module.prototype.addConnector = function(c, id, moduleName) {
	var conn = new this.connector(c, id);
	conn.module = this;
	conn.moduleName = moduleName;

	var connId = conn.id;
	if(this.connMap[connId] === undefined) {
		this.connMap[connId] = [];
		this.connMap[connId].push(conn);
	} else {
		this.connMap[connId].push(conn);
	}
	conn.start();
	console.info("connMap(connId) - ", this.connMap[connId].length);
}

exports.Module.prototype.changeConnectorId = function(oldId, newId) {
	if(this.connMap[oldId] !== undefined) {
		var conn = this.connMap[oldId];
		delete this.connMap[oldId];
		this.connMap[newId] = conn;
	}
}

exports.Module.prototype.onDestroy = function(conn) {
	var id = conn.id;
	if(this.connMap[id] !== undefined) {
		var connArr = this.connMap[id];
		for(var i = 0; i < connArr.length; i++) {
			if(connArr[i] == conn) {
				connArr.splice(i, 1);
				break;
			}
		}
		if(this.connMap[id].length == 0) delete this.connMap[id];
	}
}

exports.Module.prototype.notifyMessage = function(conn, messageObject) {
	for(var id in this.connMap) if(this.connMap.hasOwnProperty(id)) {
		for(var i = 0; i < this.connMap[id].length; i++) {
			if(this.connMap[id][i] == conn) continue;
			this.connMap[id][i].onMessage(messageObject);
		}
	}
}
