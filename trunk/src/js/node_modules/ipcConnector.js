var utils = require('twainetUtils');
var protobuf = require('protobufjs');
var conn = require('twainetConnector');

exports.IPCConnector = function(c, id) {
	var protoFilePath = "../messages/ipc.proto",
		self = this,
		protoMap = {},
		msgMap = {};

	conn.Connector.call(this, c, id);

	this.builder = protobuf.loadProtoFile(protoFilePath);
	protoMap = this.builder.build();

	var handlers = function () {}
	var notifyHandlers = function(){}

	msgMap = this.generateMap(protoMap, handlers.prototype);
	for(message in msgMap) if(msgMap.hasOwnProperty(message)){
		this.messageMap[message] = msgMap[message];
	}

	msgMap = this.generateMap(protoMap, notifyHandlers.prototype);
	for(message in msgMap) if(msgMap.hasOwnProperty(message)){
		this.notifyMessageMap[message] = msgMap[message];
	}
}

utils.extend(exports.IPCConnector, conn.Connector);