var protobuf = require('protobufjs');

exports.Connector = function(c) {
	var socketIO = c;

	console.log('server connected');

	c.on('end', function() {
	console.log('server disconnected');
	});

	c.on('readable', function() {
		try {
			var buffer = c.read(4)
			var lenPacket = buffer.readInt32LE(0);
			if(lenPacket < 0 || lenPacket > 0x7fff) {
				c.destroy();
			}

			buffer = c.read(4);
			var lenMessageName = buffer.readInt32LE(0);
			if(lenPacket < lenMessageName + 4) {
				c.destroy();
			}

			buffer = c.read(lenMessageName);
			var messageName = buffer.toString();
			buffer = c.read(lenPacket - lenMessageName - 4);
			onData(messageName, buffer);
		} catch(e) {
			console.log(e);
			c.destroy();
		}
	});

	function onData(msgName, buffer) {
		var builder = protobuf.loadProtoFile("../messages/client_server.proto"),
			message = builder.build(msgName),
			messageObject = message.decode(buffer);
			console.log(messageObject.get("name"));
	}
}