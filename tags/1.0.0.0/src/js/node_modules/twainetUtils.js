var os = require('os');

exports.extend = function (Child, Parent) {
	var f = function() { };
	f.prototype = Parent.prototype;
	Child.prototype = new f();
	Child.prototype.constructor = Child;
	Child.superclass = Parent.prototype;
};

exports.generateId = function() {
	function s4() {
		return Math.floor((1 + Math.random()) * 0x10000)
			.toString(16)
			.substring(1);
	};

	return '{' + s4() + s4() + '-' + s4() + '-' + s4() + '-' +
		s4() + '-' + s4() + s4() + s4() + '}';
}

exports.rand = function(min, max) {
	if( max ) {
		return Math.floor(Math.random() * (max - min + 1)) + min;
	} else {
		return Math.floor(Math.random() * (min + 1));
	}
}

exports.getAddr = function() {
	var netInterface = os.networkInterfaces();

	for(var name in netInterface) {
		return netInterface[name][0].address;
	}
}

Object.prototype.size = function () {
  var len = this.length ? --this.length : -1;
    for (var k in this)
      len++;
  return len;
}